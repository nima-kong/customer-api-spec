# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
     - master
  pull_request:
    types:
      - opened
      - synchronize

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  validate:
    name: Validate Customer API spec
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v1
      - name: Install NodeJS
        uses: actions/setup-node@v1
      - name: Install Deck  
        run: |
          curl -sL https://github.com/kong/deck/releases/download/v1.6.0/deck_1.6.0_linux_amd64.tar.gz -o deck.tar.gz
          tar -xf deck.tar.gz -C /tmp
          sudo cp /tmp/deck /usr/local/bin/ 
      - name: Install inso globally
        run: npm install -g insomnia-inso kong-portal-cli
      - name: Validate specification
        run: inso lint spec customer --ci
      
      # We will push to the Kong dev portal
      - name: Deploy to dev portal
        run: |
          echo ${{ secrets.KONG_ADDR }}
          inso script export
          cp workspaces/default/cli.conf.yaml.example workspaces/default/cli.conf.yaml
          portal deploy --preserve default
        env:
          KONG_ADMIN_URL: ${{ secrets.KONG_ADDR }}
          KONG_ADMIN_TOKEN: ${{ secrets.KONG_ADMIN_TOKEN }}
        
    # This is a placeholder for deploying your API to a pr/qa environment
      - name: Deploy upstreams
        run: pwd
      # Generate declarative config
      - name: Generate declarative config
        run: |
          inso script config:declarative --output kong.yaml --ci
          cat kong.yaml
      - name: Find and Replace
        uses: datamonsters/replace-action@v1
        with:
          files: 'Kong.yaml'
          replacements: 'http://customer-api-dev.default.svc.cluster.local:7050=http://customer-api.default.svc.cluster.local:7050'       
      - name: Print Kong.yaml
        run: |          
          cat kong.yaml
      # Ping the Kong instance
      # Sync to Kong
      - name: Update Kong
        run: deck ping --headers "kong-admin-token:${{ secrets.KONG_ADMIN_TOKEN }}" --kong-addr ${{ secrets.KONG_ADDR }} && deck sync --headers "kong-admin-token:${{ secrets.KONG_ADMIN_TOKEN }}" --workspace default --skip-consumers --kong-addr ${{ secrets.KONG_ADDR }} > sync.output.txt
            
      # Run tests
      - name: Run test suites
        run: inso script test --ci
